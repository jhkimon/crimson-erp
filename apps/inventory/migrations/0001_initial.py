# Generated by Django 4.2.20 on 2025-09-22 01:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'inventory_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(default='P00000', max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('management_code', models.CharField(blank=True, help_text='온라인 품목코드와 매칭용', max_length=50, null=True)),
                ('category', models.CharField(default='일반', help_text='상품 카테고리 (예: 문구, 도서, 의류 등)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'products',
                'ordering': ['product_id'],
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('reason', models.CharField(blank=True, help_text='스냅샷 사유 (예: POS 덮어쓰기 전)', max_length=200)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_code', models.CharField(max_length=50, unique=True)),
                ('option', models.CharField(max_length=255)),
                ('stock', models.IntegerField(default=0)),
                ('min_stock', models.PositiveIntegerField(default=0)),
                ('price', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True, default='')),
                ('memo', models.TextField(blank=True, default='')),
                ('cost_price', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adjustment', models.IntegerField(default=0)),
                ('order_count', models.PositiveIntegerField(default=0)),
                ('return_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('channels', models.JSONField(blank=True, default=list)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='inventory.inventoryitem')),
            ],
            options={
                'db_table': 'product_variants',
                'ordering': ['variant_code'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta', models.IntegerField(help_text='보정 수량: 양수/음수 모두 가능')),
                ('reason', models.CharField(help_text='보정 사유 설명', max_length=255)),
                ('created_by', models.CharField(help_text='보정 작업 수행자(사용자명 또는 ID)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.productvariant')),
            ],
            options={
                'db_table': 'inventory_adjustments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshotItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(db_index=True, max_length=32)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=64)),
                ('variant_code', models.CharField(db_index=True, max_length=64)),
                ('option', models.CharField(blank=True, max_length=255)),
                ('stock', models.IntegerField()),
                ('price', models.IntegerField()),
                ('cost_price', models.IntegerField()),
                ('order_count', models.IntegerField(default=0)),
                ('return_count', models.IntegerField(default=0)),
                ('sales', models.IntegerField(default=0)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorysnapshot')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='inventory.productvariant')),
            ],
            options={
                'indexes': [models.Index(fields=['snapshot', 'variant_code'], name='inventory_i_snapsho_8b581e_idx'), models.Index(fields=['product_id'], name='inventory_i_product_8462a4_idx')],
            },
        ),
    ]
