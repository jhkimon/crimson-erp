# Generated by Django 4.2.20 on 2025-07-19 06:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0004_inventoryitem_category_inventoryitem_is_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('channel_type', models.CharField(choices=[('online', '온라인'), ('offline', '오프라인'), ('pos', 'POS')], max_length=20)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sales_channels',
            },
        ),
        migrations.CreateModel(
            name='SalesTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_order_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', '결제 대기'), ('paid', '결제 완료'), ('cancelled', '주문 취소'), ('refunded', '환불 완료')], default='pending', max_length=20)),
                ('customer_name', models.CharField(blank=True, max_length=100)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('total_amount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.saleschannel')),
            ],
            options={
                'db_table': 'sales_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalesTransactionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.PositiveIntegerField()),
                ('total_price', models.PositiveIntegerField()),
                ('is_stock_reserved', models.BooleanField(default=False)),
                ('is_stock_deducted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.salestransaction')),
            ],
            options={
                'db_table': 'sales_transaction_items',
            },
        ),
        migrations.AddField(
            model_name='productvariant',
            name='adjustment',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='reserved_stock',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_quantity', models.PositiveIntegerField()),
                ('expires_at', models.DateTimeField()),
                ('is_confirmed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory.salestransactionitem')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.productvariant')),
            ],
            options={
                'db_table': 'stock_reservations',
            },
        ),
        migrations.AddField(
            model_name='salestransactionitem',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.productvariant'),
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta', models.IntegerField(help_text='보정 수량: 양수/음수 모두 가능')),
                ('reason', models.CharField(help_text='보정 사유 설명', max_length=255)),
                ('created_by', models.CharField(help_text='보정 작업 수행자(사용자명 또는 ID)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.productvariant')),
            ],
            options={
                'db_table': 'inventory_adjustments',
                'ordering': ['-created_at'],
            },
        ),
    ]
